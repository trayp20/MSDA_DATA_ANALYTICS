# -*- coding: utf-8 -*-
"""D599_TASK1.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1ItMNWr5-EDXFl3Htqb8dEx6N9zIFuNtY
"""

import pandas as pd

"""Load Dataset"""

df = pd.read_csv('/content/drive/MyDrive/Employee Turnover Dataset.csv')

df

"""Data Exploration"""

rows = df.shape[0]

rows

columns = df.shape[1]

columns

sample_values = df.head()



duplicates = df[df.duplicated()]

duplicates

missing_values = df.isnull().sum()

missing_values

unique_values = df.nunique()

unique_values

"""FIND DATATYPES"""

data_types = df.dtypes

data_types

unique_values = {col: df[col].unique() for col in df.select_dtypes(include='object').columns}

unique_values

"""DETECT OUTLIERS"""

describe = df.describe()

describe

"""Data Cleaning"""

df = df.drop_duplicates()

df

# Handle Missing Values
df.loc[:, 'NumCompaniesPreviouslyWorked'] = df['NumCompaniesPreviouslyWorked'].fillna(df['NumCompaniesPreviouslyWorked'].median())
df.loc[:, 'AnnualProfessionalDevHrs'] = df['AnnualProfessionalDevHrs'].fillna(df['AnnualProfessionalDevHrs'].mean())
df.loc[:, 'TextMessageOptIn'] = df['TextMessageOptIn'].fillna('No')

#Inconsistent Entries
df.loc[:, 'JobRoleArea'] = df['JobRoleArea'].replace({
    'Information_Technology': 'Information Technology',
    'InformationTechnology': 'Information Technology',
    'Human_Resources': 'Human Resources',
    'HumanResources': 'Human Resources'
})

df.loc[:, 'PaycheckMethod'] = df['PaycheckMethod'].replace({
    'Mail Check': 'Mailed Check',
    'Mail_Check': 'Mailed Check',
    'MailedCheck': 'Mailed Check',
    'Direct_Deposit': 'Direct Deposit',
    'DirectDeposit': 'Direct Deposit'
})

#Correct Formatting Errors
df.columns = df.columns.str.strip()  # Removes leading and trailing spaces
df.loc[:, 'HourlyRate'] = df['HourlyRate'].astype(str).str.replace(r'[\$ ]', '', regex=True).astype(float)

#Handle Outliers
def handle_outliers(df, col):
    Q1 = df[col].quantile(0.25)
    Q3 = df[col].quantile(0.75)
    IQR = Q3 - Q1
    lower_bound = Q1 - 1.5 * IQR
    upper_bound = Q3 + 1.5 * IQR

    df.loc[:, col] = df[col].clip(lower=lower_bound, upper=upper_bound)


# Apply outlier handling to specific columns
for col in ['AnnualSalary', 'DrivingCommuterDistance']:
    handle_outliers(df, col)

# Save the Cleaned Dataset
cleaned_file_path = 'Cleaned_Employee_Turnover_Dataset.csv'
df.to_csv(cleaned_file_path, index=False)